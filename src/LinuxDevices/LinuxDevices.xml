<?xml version="1.0"?>
<doc>
    <assembly>
        <name>LinuxDevices</name>
    </assembly>
    <members>
        <member name="T:LinuxDevices.InputGpioPin">
            <summary>
            Class for event-based polling of pin level changes
            </summary>
        </member>
        <member name="M:LinuxDevices.InputGpioPin.#ctor(System.String,System.Int32,System.String)">
            <summary>
            Open a GPIO device and subscribe to pin level changes
            </summary>
            <param name="devNode">Path to the GPIO chip device node</param>
            <param name="pin">Pin to open</param>
            <param name="consumerLabel">Label of the consumer</param>
            <exception cref="T:System.IO.IOException">Pin could not be initialized</exception>
        </member>
        <member name="M:LinuxDevices.InputGpioPin.Finalize">
            <summary>
            Finalizer of this instance
            </summary>
        </member>
        <member name="M:LinuxDevices.InputGpioPin.Dispose">
            <summary>
            Disposes this instance
            </summary>
        </member>
        <member name="F:LinuxDevices.InputGpioPin.disposed">
            <summary>
            Indicates if this instance has been disposed
            </summary>
        </member>
        <member name="M:LinuxDevices.InputGpioPin.DisposeInternal">
            <summary>
            Dispose this instance internally
            </summary>
        </member>
        <member name="P:LinuxDevices.InputGpioPin.Value">
            <summary>
            Current value of this pin
            </summary>
        </member>
        <member name="T:LinuxDevices.InputGpioPin.PinChangeDelegate">
            <summary>
            Delegate of the event type
            </summary>
            <param name="sender">Object invoking the callback</param>
            <param name="pinValue">New pin value</param>
        </member>
        <member name="E:LinuxDevices.InputGpioPin.PinChanged">
            <summary>
            Event to call when a pin change has occurreed
            </summary>
        </member>
        <member name="M:LinuxDevices.InputGpioPin.StartMonitoring(System.Threading.CancellationToken)">
            <summary>
            Start polling for pin events
            </summary>
            <param name="cancellationToken">Optional cancellation token</param>
            <returns>Asynchronous task</returns>
        </member>
        <member name="T:LinuxDevices.SpiDevice">
            <summary>
            Driver class for SPI transfers. Most of this is copied from the System.Device.Gpio library
            </summary>
        </member>
        <member name="M:LinuxDevices.SpiDevice.#ctor(System.String,System.Int32)">
            <summary>
            Initialize an SPI device
            </summary>
            <param name="devNode">Path to the /dev node</param>
            <param name="speed">Transfer speed in Hz</param>
        </member>
        <member name="M:LinuxDevices.SpiDevice.Finalize">
            <summary>
            Finalizer of this class
            </summary>
        </member>
        <member name="M:LinuxDevices.SpiDevice.Dispose">
            <summary>
            Disposes this instance
            </summary>
        </member>
        <member name="F:LinuxDevices.SpiDevice.disposed">
            <summary>
            Indicates if this instance has been disposed
            </summary>
        </member>
        <member name="M:LinuxDevices.SpiDevice.Dispose(System.Boolean)">
            <summary>
            Dispose this instance internally
            </summary>
            <param name="disposing">Release managed resourcess</param>
        </member>
        <member name="M:LinuxDevices.SpiDevice.TransferFullDuplex(System.ReadOnlySpan{System.Byte},System.Span{System.Byte})">
            <summary>
            Writes and reads data from the SPI device.
            </summary>
            <param name="writeBuffer">The buffer that contains the data to be written to the SPI device.</param>
            <param name="readBuffer">The buffer to read the data from the SPI device.</param>
        </member>
        <member name="F:SpiSettings.SPI_IOC_WR_MODE">
            <summary>Set SPI mode.</summary>
        </member>
        <member name="F:SpiSettings.SPI_IOC_RD_MODE">
            <summary>Get SPI mode.</summary>
        </member>
        <member name="F:SpiSettings.SPI_IOC_WR_BITS_PER_WORD">
            <summary>Set bits per word.</summary>
        </member>
        <member name="F:SpiSettings.SPI_IOC_RD_BITS_PER_WORD">
            <summary>Get bits per word.</summary>
        </member>
        <member name="F:SpiSettings.SPI_IOC_WR_MAX_SPEED_HZ">
            <summary>Set max speed (Hz).</summary>
        </member>
        <member name="F:SpiSettings.SPI_IOC_RD_MAX_SPEED_HZ">
            <summary>Get max speed (Hz).</summary>
        </member>
    </members>
</doc>
